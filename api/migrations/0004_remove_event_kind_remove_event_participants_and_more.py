# Generated by Django 5.2.dev20241016095222 on 2024-12-03 15:26

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('api', '0003_eventparticipant_is_group'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.RemoveField(
            model_name='event',
            name='kind',
        ),
        migrations.RemoveField(
            model_name='event',
            name='participants',
        ),
        migrations.RemoveField(
            model_name='event',
            name='subject',
        ),
        migrations.AddField(
            model_name='event',
            name='date',
            field=models.DateField(null=True, verbose_name='Дата'),
        ),
        migrations.AddField(
            model_name='event',
            name='kind_override',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='api.eventkind', verbose_name='Тип'),
        ),
        migrations.AddField(
            model_name='event',
            name='participants_override',
            field=models.ManyToManyField(null=True, to='api.eventparticipant', verbose_name='Участники'),
        ),
        migrations.AddField(
            model_name='event',
            name='place_override',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='api.eventplace', verbose_name='Место'),
        ),
        migrations.AddField(
            model_name='event',
            name='subject_override',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='api.subject', verbose_name='Предмет'),
        ),
        migrations.AddField(
            model_name='event',
            name='time_slot_override',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='api.timeslot', verbose_name='Временной интервал'),
        ),
        migrations.AddField(
            model_name='schedule',
            name='end_date',
            field=models.DateField(null=True, verbose_name='День окончания семестра (вкл.)'),
        ),
        migrations.AddField(
            model_name='schedule',
            name='start_date',
            field=models.DateField(null=True, verbose_name='День начала семестра (вкл.)'),
        ),
        migrations.AddField(
            model_name='schedule',
            name='status',
            field=models.IntegerField(choices=[(0, 'Активно'), (1, 'Отключено'), (2, 'Будущее'), (3, 'Архивное')], default=0, verbose_name='Текущий статус'),
        ),
        migrations.AddField(
            model_name='timeslot',
            name='alt_name',
            field=models.TextField(null=True, verbose_name='Академ. часы пары'),
        ),
        migrations.AlterField(
            model_name='event',
            name='schedule',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='events', to='api.schedule', verbose_name='Расписание'),
        ),
        migrations.CreateModel(
            name='AbstractDay',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('idnumber', models.CharField(blank=True, max_length=260, null=True, unique=True, verbose_name='Уникальный строковый идентификатор')),
                ('datecreated', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания записи')),
                ('datemodified', models.DateTimeField(auto_now_add=True, verbose_name='Дата изменения записи')),
                ('dateaccessed', models.DateTimeField(blank=True, null=True, verbose_name='Дата доступа к записи')),
                ('note', models.TextField(blank=True, max_length=1024, null=True, verbose_name='Комментарий для этой записи')),
                ('day_number', models.IntegerField(verbose_name='Смещение от начала повторяющгося фрагмента (пн. первой недели)')),
                ('name', models.CharField(max_length=64, verbose_name='Имя дня в рамках шаблона')),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Автор записи')),
            ],
            options={
                'verbose_name': 'Абстрактный день',
                'verbose_name_plural': 'Абстрактные дни',
            },
        ),
        migrations.AddField(
            model_name='schedule',
            name='starting_day_number',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='api.abstractday', verbose_name='Номер дня начала (двухнедельного) цикла'),
        ),
        migrations.CreateModel(
            name='AbstractEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('idnumber', models.CharField(blank=True, max_length=260, null=True, unique=True, verbose_name='Уникальный строковый идентификатор')),
                ('datecreated', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания записи')),
                ('datemodified', models.DateTimeField(auto_now_add=True, verbose_name='Дата изменения записи')),
                ('dateaccessed', models.DateTimeField(blank=True, null=True, verbose_name='Дата доступа к записи')),
                ('note', models.TextField(blank=True, max_length=1024, null=True, verbose_name='Комментарий для этой записи')),
                ('abstract_day', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.abstractday', verbose_name='Абстрактный день')),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Автор записи')),
                ('kind', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.eventkind', verbose_name='Тип')),
                ('participants', models.ManyToManyField(to='api.eventparticipant', verbose_name='Участники')),
                ('place', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.eventplace', verbose_name='Место')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.subject', verbose_name='Предмет')),
                ('time_slot', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.timeslot', verbose_name='Временной интервал')),
            ],
            options={
                'verbose_name': 'Абстрактное событие',
                'verbose_name_plural': 'Абстрактные события',
            },
        ),
        migrations.AddField(
            model_name='event',
            name='abstract_event',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='api.abstractevent', verbose_name='Абстрактное событие'),
        ),
        migrations.CreateModel(
            name='AbstractSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('idnumber', models.CharField(blank=True, max_length=260, null=True, unique=True, verbose_name='Уникальный строковый идентификатор')),
                ('datecreated', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания записи')),
                ('datemodified', models.DateTimeField(auto_now_add=True, verbose_name='Дата изменения записи')),
                ('dateaccessed', models.DateTimeField(blank=True, null=True, verbose_name='Дата доступа к записи')),
                ('note', models.TextField(blank=True, max_length=1024, null=True, verbose_name='Комментарий для этой записи')),
                ('repetition_period', models.IntegerField(verbose_name='Период повторения')),
                ('repeatable', models.BooleanField(verbose_name='Повторяется ли')),
                ('aligned_by_week_day', models.IntegerField(verbose_name='Выравнивание относительно дня недели (null=0, пн=1, ...)')),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Автор записи')),
            ],
            options={
                'verbose_name': 'Абстрактное расписание',
                'verbose_name_plural': 'Абстрактные расписания',
            },
        ),
        migrations.AddField(
            model_name='schedule',
            name='abstract_schedule',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='api.abstractschedule', verbose_name='Абстрактное расписание'),
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('idnumber', models.CharField(blank=True, max_length=260, null=True, unique=True, verbose_name='Уникальный строковый идентификатор')),
                ('datecreated', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания записи')),
                ('datemodified', models.DateTimeField(auto_now_add=True, verbose_name='Дата изменения записи')),
                ('dateaccessed', models.DateTimeField(blank=True, null=True, verbose_name='Дата доступа к записи')),
                ('note', models.TextField(blank=True, max_length=1024, null=True, verbose_name='Комментарий для этой записи')),
                ('name', models.CharField(max_length=64, verbose_name='Имя подразделения')),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Автор записи')),
                ('parent_department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.department', verbose_name='Подразделение')),
            ],
            options={
                'verbose_name': 'Подразделение',
                'verbose_name_plural': 'Подразделения',
            },
        ),
        migrations.AddField(
            model_name='abstractschedule',
            name='department',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.department', verbose_name='Подразделение'),
        ),
        migrations.AddField(
            model_name='eventparticipant',
            name='department',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.department', verbose_name='Подразделение'),
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('idnumber', models.CharField(blank=True, max_length=260, null=True, unique=True, verbose_name='Уникальный строковый идентификатор')),
                ('datecreated', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания записи')),
                ('datemodified', models.DateTimeField(auto_now_add=True, verbose_name='Дата изменения записи')),
                ('dateaccessed', models.DateTimeField(blank=True, null=True, verbose_name='Дата доступа к записи')),
                ('note', models.TextField(blank=True, max_length=1024, null=True, verbose_name='Комментарий для этой записи')),
                ('name', models.CharField(max_length=64, verbose_name='Имя учреждения')),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Автор записи')),
            ],
            options={
                'verbose_name': 'Учреждение',
                'verbose_name_plural': 'Учреждения',
            },
        ),
        migrations.AddField(
            model_name='department',
            name='organization',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.organization', verbose_name='Учреждение'),
        ),
        migrations.DeleteModel(
            name='EventHolding',
        ),
    ]
